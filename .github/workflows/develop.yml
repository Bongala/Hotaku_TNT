
name: Hotaku
on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

jobs:
  project-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install

      - name: Sonarless Scan
        uses: gitricko/sonarless@v1.2
        with:
          sonar-source-path: 'src'
          sonar-project-key: ${{  github.run_id }}
          sonar-metrics-path: './sonar-mymetrics.json'

      - name: Check Sonar Metrics - No Vulnerabilities
        run: |
          echo "Checking for any vulnerabilities in Sonar Metrics JSON"
          VULN=$(cat ./sonar-mymetrics.json | jq -r '.component.measures[] | select(.metric == "vulnerabilities").value')
          echo "# of vulnerabilities = ${VULN}"
          [ "${VULN}" -eq "0" ]

      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify

  docker-build:
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs:
      - project-build
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dashboard to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-app
          push: true
          tags: tericcabrel/bmi:latest

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      # - name: Update dependency graph
      #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  # TODO: Implement when need auto hosting (Service: Render)
  # deploy:
    # if: ${{ github.ref == 'refs/heads/main' }}
    # runs-on: ubuntu-latest
    # needs:
    #   - docker-build
    # steps:
    #   - uses: actions/checkout@v3
    #   - name: Add Server key
    #     run: |
    #       touch key.txt && echo "${{ secrets.SERVER_KEY }}" > key.txt
    #       chmod 600 key.txt
    #   - name: Deploy the application
    #     env:
    #       SERVER_HOST: ${{ secrets.SERVER_HOST }}
    #       SERVER_PORT: ${{ secrets.SERVER_PORT }}
    #       SERVER_USER: ${{ secrets.SERVER_USER }}
    #     run: |
    #       set -e
    #       ./deploy.sh